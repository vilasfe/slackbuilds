Google App Engine Go Language SDK

The Go SDK's includes a web server application that simulates the
AppEngine environment, including a local version of the datastore,
Google Accounts, and the ability to fetch URLs and send email directly
from your computer using the App Engine APIs. The Go SDK uses slightly
modified versions of the development tools from the Python SDK, and
will run on any Intel-based Mac OS X or Linux computer with Python
2.5.

Homepage: http://code.google.com/appengine

Alternate download site: http://code.google.com/p/googleappengine

NOTE: There are some minor limitations to the Go SDK for
App Engine vs the full blown Go Language SDK, but for
most part this package can be used to develop and compile
stand-alone Go programs as well.  See The Go Programming
Language Blog, Tuesday, May 10, 2011, Go and Google Appengine at
http://blog.golang.org/2011/05/go-and-google-app-engine.html for more
details.

WARNING: This SlackBuild puts the Google Appengine Go SDK tools onto
your PATH using the script gae.sh (or gae.csh) in /etc/profile.d that
is sourced by /etc/profile (or /etc/csh.login).  If you also install
the Google Appengine Python SDK then the gae.sh (and gae.csh) scripts
will clash and you'll be left with a gae.sh.new (and gae.csh.new) file
in /etc/profile.d.

THIS IS INTENTIONAL!!!

This is because Google's Go and Python SDK's for Appengine contain
Python scripts with the same names that are different: you cannot use,
for example, the appcfg.py or dev_appserver.py from one SDK on apps
written with the other SDK!

It is up to you to sort out this mess and decide which - if any -
SDK's tools you want on the PATH and which you'll call with the
full path.  I had written some wrapper scripts (inspired by Google's
own gomake script) that work around this issue; but I felt this
solution was more appropriate for Slackware and absolved me of the
responsability of untangling Google's mess!

AND ANOTHER WARNING: If you also install the Google Go language
SlackBuild you'll have another clash since the Appengine Go SDK
contains a subset of the Go language SDK; it has some of the same
tools and relies on the same environment variables (in particular
GOROOT). So you need decide if you want to keep the Go Appengine
on your PATH or the Go Language (via /etc/profile.d/go.sh and
/etc/profile.d/go.csh).

Sorry, but I don't write 'em - I just build 'em!
